/* jshint ignore:start */
'use strict';

/* jshint ignore:end */
var app = angular.module('jbm', [
  // external dep
  "templates"
  ,"ui.router"
  ,"ngMaterial"
  ,"720kb.socialshare"
  ,"angularFileUpload"
  //internal dep
  , "slider"

  , "rubrica"

  , "contact"

  , "tags"

  , "comment"

  , "image"

  , "post"
  , "sponsor"



]);
app
.config(['$urlRouterProvider', '$locationProvider', function($urlRouterProvider, $locationProvider) {
//   $locationProvider.html5Mode(true);
    $urlRouterProvider.otherwise('/');


  }])
;

angular.module('comment', []);

angular.module('contact', []);

angular.module('image', []);

angular.module('post', []);

angular.module('rubrica', []);

angular.module('slider', []);

angular.module('sponsor', []);

angular.module('tags', []);

// router configuration

angular.module('comment').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('listacomment', {
      url: '/listacomment',
      parent: 'backend',
      templateUrl: 'comment/backend/list/tpl.html',
      controller: 'listacommentCtrl'
    });
}])

// controller

.controller('listacommentCtrl', ['$scope', '_', 'httpFactory', function($scope, _, httpFactory) {

  httpFactory.GetList('comment/unconfirmed')
    .success(function(data) {
      $scope.items = data;
    });

  $scope.Delete = function(id, index) {
    httpFactory.Delete('comment', id)
      .success(function(data) {
        $scope.items.splice(index, 1);

      });
  };

  $scope.Accetta = function(item, index) {
    item.approvato=true;
    httpFactory.Save('comment', item)
      .success(function(data) {
        $scope.items.splice(index, 1);

      });
  };
}]);

// router configuration

angular.module('contact').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('listacontact', {
      url: '/listacontact',
      parent: 'backend',
      templateUrl: 'contact/backend/list/tpl.html',
      controller: 'listacontactCtrl'
    });
}])

// controller

.controller('listacontactCtrl', ['$scope', '_', 'httpFactory', function($scope, _, httpFactory) {
var reload = function(){

  httpFactory.GetList('contact')
    .success(function(data) {
      $scope.nuovi =_.filter(data, 'approvato', false);
      console.log($scope.nuovi);
      $scope.archiviati = _.filter(data, 'approvato', true);
    });
};
reload();
  $scope.Delete = function(id, index) {
    httpFactory.Delete('contact', id)
      .success(function(data) {
        reload();

      });
  };

  $scope.Accetta = function(item, index) {
    item.approvato=true;
    httpFactory.Save('contact', item)
      .success(function(data) {
        reload();
      });
  };
}]);

// router configuration

angular.module('contact').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('contact', {
      url: '/contact',
      parent: 'frontend',
      templateUrl: 'contact/frontend/contact/tpl.html',
      controller: 'contactCtrl'
    });
}])

// controller

.controller('contactCtrl', ['$scope', 'httpFactory', function($scope, httpFactory) {

}]);

// router configuration

app.config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('listaimage', {
      url: '/listaimage',
      parent: 'backend',
      templateUrl: 'image/backend/list/tpl.html',
      controller: 'listaimageCtrl'
    });
}])

// controller

.controller('listaimageCtrl', ['$scope', '_', 'httpFactory', '$mdDialog', function($scope, _, httpFactory, $mdDialog) {

  httpFactory.GetList('image')
    .success(function(data) {
      $scope.items = data;
    });

  $scope.Delete = function(id, index) {
    httpFactory.Delete('image', id)
      .success(function(data) {
        $scope.items.splice(index, 1);
      });
  };

  $scope.new = function() {

    var dialogConfig = {
      templateUrl: 'image/dialogs/addImage/tpl.html',
      controller: 'newImageController',
      locals: {
        tipoDiImmagine: ''
      }
    };
    $mdDialog.show(dialogConfig)
      .then(function(data) {
        httpFactory.SendImg(data.files, data.informazioni)
          .success(function(data) {
            console.log(data);
          });

      });
  };
}]);

app.controller('newImageController', ['$scope', '$mdDialog', 'tipoDiImmagine', function($scope, $mdDialog, tipoDiImmagine) {
  if (tipoDiImmagine !== '') {
    $scope.image = {informazioni:{tipo: tipoDiImmagine}};
  }
  $scope.tipologie = ['header', 'copertina', 'galleria'];


  $scope.tipoDiImmagine = tipoDiImmagine;

  $scope.save = function(data) {

    $mdDialog.hide(data);
  };

  $scope.closeDialog = function() {
    $mdDialog.hide();
  };
}]);

app.controller('expandImageController', ['$scope', '$mdDialog', 'image', function($scope, $mdDialog, image) {

$scope.expandedImage=image;

  $scope.save = function(data) {

    $mdDialog.hide(data);
  };

  $scope.closeDialog = function() {
    $mdDialog.hide();
  };
}]);

// router configuration

angular.module('image').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('galleria', {
      url: '/galleria',
      parent: 'frontend',
      templateUrl: 'image/frontend/galleria/tpl.html',
      controller: 'galleriaCtrl'
    });
}])

// controller

.controller('galleriaCtrl', ['$scope', 'httpFactory', '_', function($scope, httpFactory, _) {
  $scope.multiplier= 5;
  httpFactory.GetList('image')
  .success(function(data) {
    console.log(data);

  var items=  _(_.filter(data, { 'tipo': 'galleria'})).forEach(function(n) {
      if(n.orientation==='orizzontale'){

     n.larghezza=3; n.altezza=2; n.larghezzaLPar=6; n.altezzaLPar=4;
      }else{
        n.larghezza=2; n.altezza=3; n.larghezzaLPar=6; n.altezzaLPar=9;
      }
    }).value();

    $scope.galleriaList =  items;
  });
}]);


/*
_(item.galleria).forEach(function(n) {



  if(n.orientation==='orizzontale'){

 n.larghezza=3; n.altezza=2; n.larghezzaLPar=6; n.altezzaLPar=4;
  }else{
    n.larghezza=2; n.altezza=3; n.larghezzaLPar=6; n.altezzaLPar=9;
  }
}).value();
console.log(item);
  $scope.post = item;

*/

// router configuration

angular.module('post').config(['$stateProvider', function($stateProvider) {
  $stateProvider
  .state('editpost', {
    url: '/editpost/:id',
    parent: 'backend',
    templateUrl: 'post/backend/edit/tpl.html',
    controller: 'nuovopostCtrl'
  });
}])


// controller

.controller('nuovopostCtrl', ['$scope', '_', 'httpFactory', '$state', '$stateParams', '$mdDialog', function($scope, _, httpFactory, $state, $stateParams, $mdDialog) {
  $scope.tipiDiPost= ['articolo', 'outfit', 'shooting', 'press', 'aboutme', 'travel'];
  $scope.showComment= false;

  if ($state.current.name === 'editpost') {
    httpFactory.GetId('post', $stateParams.id)
      .success(function(data) {
        $scope.post = data;
        httpFactory.GetId('comment', data._id)
          .success(function(data) {
            $scope.commenti = data;
          });
      });
  }

  $scope.Save = function() {
    if ($state.current.name === 'nuovopost') {
      httpFactory.New('post', $scope.post)
        .success(function(data) {
          $state.go('listapost');
        });
    } else {
      httpFactory.Save('post', $scope.post).success(function(data) {
        $state.go('listapost');
      });
    }
  };

  $scope.tags = function() {
    var tagList= [];
    if ($scope.post && $scope.post.tags){tagList=$scope.post.tags;}
    var dialogConfig = {
      templateUrl: 'tags/dialogs/admin/tpl.html',
      controller: 'tagsAdminController',
      locals: {
           tagList: tagList
         }
    };
    $mdDialog.show(dialogConfig)
    .then(function(data){
      $scope.post.tags=data;
    });

  };

  $scope.header = function() {
    var dialogConfig = {
      templateUrl: 'image/dialogs/addImage/tpl.html',
      controller: 'newImageController',
      locals: {
        tipoDiImmagine: 'header'
      }
    };
    $mdDialog.show(dialogConfig)
      .then(function(data) {
        httpFactory.SendImg(data.files, data.informazioni)
          .success(function(data) {
            console.log(data);
            if (!$scope.post.header){$scope.post.header=[];}
            $scope.post.header.push(data.nome);
          });

      });
  };

  $scope.copertina = function() {
    var dialogConfig = {
      templateUrl: 'image/dialogs/addImage/tpl.html',
      controller: 'newImageController',
      locals: {
        tipoDiImmagine: 'copertina'
      }
    };
    $mdDialog.show(dialogConfig)
      .then(function(data) {
        httpFactory.SendImg(data.files, data.informazioni)
          .success(function(data) {
            console.log(data);

            $scope.post.copertina={ nome: data.nome, orientation: data.orientation };
          });

      });
  };

  $scope.galleria = function() {
    var dialogConfig = {
      templateUrl: 'image/dialogs/addImage/tpl.html',
      controller: 'newImageController',
      locals: {
        tipoDiImmagine: 'galleria'
      }
    };
    $mdDialog.show(dialogConfig)
      .then(function(data) {
        data.informazioni.rif=$stateParams.id;
        httpFactory.SendImg(data.files, data.informazioni)
          .success(function(data) {
            console.log(data);
            $scope.post.galleria.push({ nome: data.nome, orientation: data.orientation });
          });

      });
  };

  $scope.comment = function() {
    $scope.showComment = !$scope.showComment;
  };

  $scope.Delete = function(id, index) {
    httpFactory.Delete('comment', id)
      .success(function(data) {
        $scope.commenti.splice(index, 1);

      });
  };

}]);

// router configuration

angular.module('post').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('listapost', {
      url: '/listapost',
      parent: 'backend',
      templateUrl: 'post/backend/list/tpl.html',
      controller: 'listapostCtrl'
    });
}])

// controller

.controller('listapostCtrl', ['$scope', '_', 'httpFactory', '$mdDialog', function($scope, _, httpFactory, $mdDialog) {

  httpFactory.GetList('post')
  .success(function(data) {
    $scope.postList = data;
  });

  $scope.setState = function(postToSet) {

    httpFactory.Save('post', postToSet).success(function(data) {
      console.log(data);
    });
  };

  $scope.new = function() {
    var dialogConfig = {
      templateUrl: 'post/dialogs/new/tpl.html',
      controller: 'postNewController',
    };
    $mdDialog.show(dialogConfig)
      .then(function(postToAdd) {

      httpFactory.New('post', postToAdd)
        .success(function(data) {
          $scope.postList.unshift(data);
        });


      });

  };

  $scope.Delete = function(id, index) {
    httpFactory.Delete('post', id)
    .success(function(data) {
    $scope.postList.splice(index, 1);

    });
  };
}]);

app.controller('postNewController', ['$scope', '$mdDialog', function($scope, $mdDialog) {
  $scope.tipiDiPost= ['articolo', 'outfit', 'shooting', 'press', 'aboutme', 'travel'];
  $scope.save = function(data) {

    $mdDialog.hide(data);
  };

  $scope.closeDialog = function() {
    $mdDialog.hide();
  };
}]);

/*

  if (tipoDiImmagine !== '') {
    $scope.image = {informazioni:{tipo: tipoDiImmagine}};
  }
  $scope.tipologie = ['header', 'copertina', 'galleria'];


  $scope.tipoDiImmagine = tipoDiImmagine;
*/

// router configuration

angular.module('post').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('aboutme', {
      url: '/aboutme',
      parent: 'frontend',
      templateUrl: 'post/frontend/aboutme/tpl.html',
      controller: 'aboutmeCtrl'
    });
}])

// controller

.controller('aboutmeCtrl', ['$scope', 'superCache', '_', function($scope,  superCache,_) {

  $scope.post = _.find(superCache.get('post'), { 'tipo': 'aboutme'});

}]);

// router configuration

angular.module('post').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('articoli', {
      url: '/articoli',
      parent: 'frontend',
      templateUrl: 'post/frontend/articoli/tpl.html',
      controller: 'articoliCtrl'
    });
}])

// controller

.controller('articoliCtrl', ['$scope', 'superCache', '_', function($scope, superCache, _) {

  var data = superCache.get('articoli');
  var chankIterator = 0;
  $scope.articoliList = [];
  $scope.moreAviable = data.length > chankIterator;

  var addchunk = function(chunk) {
    for (var i = 0; i < chunk.length; i++) {
      $scope.articoliList.push(chunk[i]);
    }
    chankIterator += 1;
    $scope.moreAviable = data.length > chankIterator;
  };


  addchunk(data[chankIterator]);

  $scope.more = function() {
    addchunk(data[chankIterator]);

  };

}]);

// router configuration

angular.module('post').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('post', {
      url: '/post',
      parent: 'frontend',
      templateUrl: 'post/frontend/list/tpl.html',
      controller: 'postCtrl'
    });
}])

// controller

.controller('postCtrl', ['$scope', 'httpFactory', function($scope, httpFactory) {
  httpFactory.GetList('post')
  .success(function(data) {
    $scope.postList = data;
  });
}]);

// router configuration

angular.module('post').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('outfit', {
      url: '/outfit',
      parent: 'frontend',
      templateUrl: 'post/frontend/outfit/tpl.html',
      controller: 'outfitCtrl'
    });
}])

// controller

.controller('outfitCtrl', ['$scope', 'superCache', '_', function($scope, superCache, _) {

  var data = superCache.get('outfit');
  var chankIterator = 0;
  $scope.articoliList = [];
  $scope.moreAviable = data.length > chankIterator;

  var addchunk = function(chunk) {
    for (var i = 0; i < chunk.length; i++) {
      $scope.articoliList.push(chunk[i]);
    }
    chankIterator += 1;
    $scope.moreAviable = data.length > chankIterator;
  };


  addchunk(data[chankIterator]);

  $scope.more = function() {
    addchunk(data[chankIterator]);

  };


}]);

// router configuration

angular.module('post').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('press', {
      url: '/press',
      parent: 'frontend',
      templateUrl: 'post/frontend/press/tpl.html',
      controller: 'pressCtrl'
    });
}])

// controller

.controller('pressCtrl', ['$scope', 'httpFactory', function($scope, httpFactory) {
  httpFactory.GetList('post')
  .success(function(data) {
    $scope.pressList = data;
  });
}]);

// router configuration

angular.module('post').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('shooting', {
      url: '/shooting',
      parent: 'frontend',
      templateUrl: 'post/frontend/shooting/tpl.html',
      controller: 'shootingCtrl'
    });
}])

// controller

.controller('shootingCtrl', ['$scope', 'superCache', '_', function($scope, superCache, _) {

  var data = superCache.get('shooting');
  var chankIterator = 0;
  $scope.articoliList = [];
  $scope.moreAviable = data.length > chankIterator;

  var addchunk = function(chunk) {
    for (var i = 0; i < chunk.length; i++) {
      $scope.articoliList.push(chunk[i]);
    }
    chankIterator += 1;
    $scope.moreAviable = data.length > chankIterator;
  };


  addchunk(data[chankIterator]);

  $scope.more = function() {
    addchunk(data[chankIterator]);

  };


}]);

// router configuration

angular.module('post').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('postSingle', {
      url: '/post/:id',
      parent: 'frontend',
      templateUrl: 'post/frontend/single/tpl.html',
      controller: 'postSingleCtrl'
    });
}])

// controller

.controller('postSingleCtrl', ['$scope', 'httpFactory', '$stateParams', 'superCache', '_', function($scope, httpFactory, $stateParams, superCache,_) {

  var  item= _.find(superCache.get('post'), { '_id': $stateParams.id});
    $scope.multiplier=9;


  _(item.galleria).forEach(function(n) {



    if(n.orientation==='orizzontale'){

   n.larghezza=3; n.altezza=2; n.larghezzaLPar=6; n.altezzaLPar=4;
    }else{
      n.larghezza=2; n.altezza=3; n.larghezzaLPar=6; n.altezzaLPar=9;
    }
  }).value();
console.log(item);
    $scope.post = item;

    $scope.piuUno = function(tipo){
      httpFactory.GetList('post/addtocounter/'+$scope.post._id+'/'+tipo)
      .success(function(data) {

      $scope.post.contatori[tipo]+=1;
      });

    };






}]);

// router configuration

angular.module('post').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('travel', {
      url: '/travel',
      parent: 'frontend',
      templateUrl: 'post/frontend/travel/tpl.html',
      controller: 'travelCtrl'
    });
}])

// controller

.controller('travelCtrl', ['$scope', 'superCache', '_', function($scope, superCache, _) {


    $scope.articoliList = _.filter(superCache.get('post'), { 'tipo': 'travel'});

}]);

// router configuration

angular.module('rubrica').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('listarubrica', {
      url: '/listarubrica',
      parent: 'backend',
      templateUrl: 'rubrica/backend/list/tpl.html',
      controller: 'listarubricaCtrl'
    });
}])

// controller

.controller('listarubricaCtrl', ['$scope', '_', 'httpFactory', '$mdDialog', function($scope, _, httpFactory, $mdDialog) {
  var reload = function() {

    httpFactory.GetList('rubrica')
      .success(function(data) {
        console.log(data);
        $scope.nuovi = _.filter(data, 'approvato', false);
        $scope.archiviati = _.filter(data, 'approvato', true);
      });
  };
  reload();
  $scope.Delete = function(id, index) {
    httpFactory.Delete('rubrica', id)
      .success(function(data) {
        reload();

      });
  };
  $scope.Rispondi = function(risp, item, index) {

    var dialogConfig = {
      templateUrl: 'rubrica/dialogs/risposta/tpl.html',
      controller: 'rispostaController',
      locals: {
        risp: risp
      }
    };
    $mdDialog.show(dialogConfig)
      .then(function(data) {

        item.risposta = data;
        httpFactory.Save('rubrica', item)
          .success(function(data) {
            reload();
          });
      });



  };
  $scope.Accetta = function(item, index) {
    item.approvato = true;
    httpFactory.Save('rubrica', item)
      .success(function(data) {
        reload();
      });
  };
}]);

app.controller('rispostaController', ['$scope', '$mdDialog', 'risp', function($scope, $mdDialog, risp) {
console.log(risp);
$scope.risposta=risp;

  $scope.save = function() {

    $mdDialog.hide($scope.risposta);
  };

  $scope.closeDialog = function() {
    $mdDialog.hide();
  };
}]);

// router configuration

angular.module('rubrica').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('rubrica', {
      url: '/rubrica',
      parent: 'frontend',
      templateUrl: 'rubrica/frontend/rubrica/tpl.html',
      controller: 'rubricaCtrl'
    });
}])

// controller

.controller('rubricaCtrl', ['$scope', 'httpFactory', function($scope, httpFactory) {

  httpFactory.GetList('rubrica')
    .success(function(data) {
      console.log(data);
      $scope.rubricaList= data;
    });

}]);

// router configuration

angular.module('slider').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('nuovoslider', {
      url: '/nuovoslider',
      parent: 'backend',
      templateUrl: 'slider/backend/edit/tpl.html',
      controller: 'nuovosliderCtrl'
    })

  .state('editslider', {
    url: '/editslider/:id',
    parent: 'backend',
    templateUrl: 'slider/backend/edit/tpl.html',
    controller: 'nuovosliderCtrl'
  });
}])


// controller

.controller('nuovosliderCtrl', ['$scope', '_', 'httpFactory', '$state', '$stateParams', '$mdDialog', function($scope, _, httpFactory, $state, $stateParams, $mdDialog) {


  if ($state.current.name === 'editslider') {
    httpFactory.GetId('slider', $stateParams.id)
      .success(function(data) {
        $scope.slider = data;
        });
  }

  $scope.Save = function() {
    if ($state.current.name === 'nuovoslider') {
      httpFactory.New('slider', $scope.slider)
        .success(function(data) {
          $state.go('listaslider');
        });
    } else {
      httpFactory.Save('slider', $scope.slider).success(function(data) {
        $state.go('listaslider');
      });
    }
  };

  $scope.header = function() {
    var dialogConfig = {
      templateUrl: 'image/dialogs/addImage/tpl.html',
      controller: 'newImageController',
      locals: {
        tipoDiImmagine: 'header'
      }
    };
    $mdDialog.show(dialogConfig)
      .then(function(data) {
        httpFactory.SendImg(data.files, data.informazioni)
          .success(function(data) {
            console.log(data);
            if (!$scope.slider.immagini){$scope.slider.immagini=[];}
            $scope.slider.immagini.push(data.nome);
          });

      });
  };

  $scope.Splice = function(index){

    $scope.slider.immagini.splice(index, 1);


  };




}]);

// router configuration

angular.module('slider').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('listaslider', {
      url: '/listaslider',
      parent: 'backend',
      templateUrl: 'slider/backend/list/tpl.html',
      controller: 'listasliderCtrl'
    });
}])

// controller

.controller('listasliderCtrl', ['$scope', '_', 'httpFactory', function($scope, _, httpFactory) {

  httpFactory.GetList('slider')
  .success(function(data) {
    $scope.items = data;
  });

  $scope.Delete = function(id, index) {
    httpFactory.Delete('slider', id)
    .success(function(data) {
    $scope.items.splice(index, 1);

    });
  };
}]);

// router configuration

angular.module('sponsor').config(['$stateProvider', function($stateProvider) {
  $stateProvider
  .state('editsponsor', {
    url: '/editsponsor/:id',
    parent: 'backend',
    templateUrl: 'sponsor/backend/edit/tpl.html',
    controller: 'nuovosponsorCtrl'
  });
}])


// controller

.controller('nuovosponsorCtrl', ['$scope', '_', 'httpFactory', '$state', '$stateParams', '$mdDialog', function($scope, _, httpFactory, $state, $stateParams, $mdDialog) {


  if ($state.current.name === 'editsponsor') {
    httpFactory.GetId('sponsor', $stateParams.id)
      .success(function(data) {
        $scope.sponsor = data;
        httpFactory.GetId('comment', data._id)
          .success(function(data) {
            $scope.commenti = data;
          });
      });
  }

  $scope.Save = function() {
    if ($state.current.name === 'nuovosponsor') {
      httpFactory.New('sponsor', $scope.sponsor)
        .success(function(data) {
          $state.go('listasponsor');
        });
    } else {
      httpFactory.Save('sponsor', $scope.sponsor).success(function(data) {
        $state.go('listasponsor');
      });
    }
  };



  $scope.copertina = function() {
    var dialogConfig = {
      templateUrl: 'image/dialogs/addImage/tpl.html',
      controller: 'newImageController',
      locals: {
        tipoDiImmagine: 'copertina'
      }
    };
    $mdDialog.show(dialogConfig)
      .then(function(data) {
        httpFactory.SendImg(data.files, data.informazioni)
          .success(function(data) {
            console.log(data);
            $scope.sponsor.copertina={ nome: data.nome, orientation: data.orientation};
          });

      });
  };


}]);

// router configuration

angular.module('sponsor').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('listasponsor', {
      url: '/listasponsor',
      parent: 'backend',
      templateUrl: 'sponsor/backend/list/tpl.html',
      controller: 'listasponsorCtrl'
    });
}])

// controller

.controller('listasponsorCtrl', ['$scope', '_', 'httpFactory', '$mdDialog', function($scope, _, httpFactory, $mdDialog) {

  httpFactory.GetList('sponsor')
  .success(function(data) {
    $scope.sponsorList = data;
  });

  $scope.setState = function(sponsorToSet) {

    httpFactory.Save('sponsor', sponsorToSet).success(function(data) {
      console.log(data);
    });
  };

  $scope.new = function() {
    var dialogConfig = {
      templateUrl: 'sponsor/dialogs/new/tpl.html',
      controller: 'sponsorNewController',
    };
    $mdDialog.show(dialogConfig)
      .then(function(sponsorToAdd) {

      httpFactory.New('sponsor', sponsorToAdd)
        .success(function(data) {
          $scope.sponsorList.unshift(data);
        });


      });

  };

  $scope.Delete = function(id, index) {
    httpFactory.Delete('sponsor', id)
    .success(function(data) {
    $scope.sponsorList.splice(index, 1);

    });
  };
}]);

app.controller('sponsorNewController', ['$scope', '$mdDialog', function($scope, $mdDialog) {
  $scope.tipiDiPost= ['articolo', 'outfit', 'shooting', 'press', 'aboutme'];
  $scope.save = function(data) {

    $mdDialog.hide(data);
  };

  $scope.closeDialog = function() {
    $mdDialog.hide();
  };
}]);

/*

  if (tipoDiImmagine !== '') {
    $scope.image = {informazioni:{tipo: tipoDiImmagine}};
  }
  $scope.tipologie = ['header', 'copertina', 'galleria'];


  $scope.tipoDiImmagine = tipoDiImmagine;
*/

// router configuration

angular.module('tags').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('nuovotags', {
      url: '/nuovotags',
      parent: 'backend',
      templateUrl: 'tags/backend/edit/tpl.html',
      controller: 'nuovotagsCtrl'
    })

  .state('edittags', {
    url: '/edittags/:id',
    parent: 'backend',
    templateUrl: 'tags/backend/edit/tpl.html',
    controller: 'nuovotagsCtrl'
  });
}])


// controller

.controller('nuovotagsCtrl', ['$scope', '_', 'httpFactory', '$state', '$stateParams', '$mdDialog', function($scope, _, httpFactory, $state, $stateParams, $mdDialog) {
  $scope.showComment= false;

  if ($state.current.name === 'edittags') {
    httpFactory.GetId('tags', $stateParams.id)
      .success(function(data) {
        $scope.tags = data;
        httpFactory.GetId('comment', data._id)
          .success(function(data) {
            $scope.commenti = data;
          });
      });
  }

  $scope.Save = function() {
    if ($state.current.name === 'nuovotags') {
      httpFactory.New('tags', $scope.tags)
        .success(function(data) {
          $state.go('listatags');
        });
    } else {
      httpFactory.Save('tags', $scope.tags).success(function(data) {
        $state.go('listatags');
      });
    }
  };

  $scope.comment = function() {
    $scope.showComment = !$scope.showComment;

  };



  $scope.Delete = function(id, index) {
    httpFactory.Delete('comment', id)
      .success(function(data) {
        $scope.commenti.splice(index, 1);

      });
  };

}]);

// router configuration

angular.module('tags').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('listatags', {
      url: '/listatags',
      parent: 'backend',
      templateUrl: 'tags/backend/list/tpl.html',
      controller: 'listatagsCtrl'
    });
}])

// controller

.controller('listatagsCtrl', ['$scope', '_', 'httpFactory', function($scope, _, httpFactory) {

  httpFactory.GetList('tags')
  .success(function(data) {
    $scope.items = data;
  });

  $scope.Delete = function(id, index) {
    httpFactory.Delete('tags', id)
    .success(function(data) {
    $scope.items.splice(index, 1);

    });
  };
}]);

app.controller('tagsAdminController', ['$scope', '$mdDialog', 'httpFactory', 'tagList', function($scope, $mdDialog, httpFactory, tagList) {

$scope.answer=tagList;

  httpFactory.GetList('tags')
    .success(function(data) {
      $scope.tags = data;
    });

    $scope.addTagToAnswer = function(nome) {
      if($scope.answer.indexOf(nome) === -1){
          $scope.answer.push(nome);
      }
    };

    $scope.deleteTagFromAnswer = function(index) {
      $scope.answer.splice(index, 1);
    };

  $scope.Delete = function(id, index) {
    httpFactory.Delete('tags', id)
      .success(function(data) {
        $scope.tags.splice(index, 1);
      });
  };

  $scope.addTag = function(data) {
    httpFactory.New('tags', $scope.newTag)
      .success(function(data) {
        $scope.tags.push(data);
        $scope.newTag='';
      });
  };


  $scope.save = function() {

    $mdDialog.hide($scope.answer);
  };

  $scope.closeDialog = function() {
    $mdDialog.hide();
  };
}]);

// router configuration

angular.module('tags').config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('taglist', {
      url: '/tags/:tagToSearch',
      parent: 'frontend',
      templateUrl: 'tags/frontend/taglist/tpl.html',
      controller: 'tagListCtrl'
    });
}])

// controller

.controller('tagListCtrl', ['$scope', 'superCache', '$stateParams', '_', function($scope, superCache, $stateParams,_) {

    var filteredData= _.filter(superCache.get('post'), function(post) {
      return _.includes(post.tags, $stateParams.tagToSearch);
    });

    _(filteredData).forEach(function(n) {
      $scope.multiplier=9;

      if(n.copertina.orientation==='orizzontale'){
        n.larghezza=3; n.altezza=2;
      }else{
        n.larghezza=2; n.altezza=3;
      }
    }).value();


    $scope.tagList = filteredData;

}]);

app
  .factory('superCache', ['$cacheFactory', function($cacheFactory) {
    return $cacheFactory('super-cache');
  }]);

app
  .factory('httpFactory', ['_', '$http', '$upload', function(_, $http, $upload) {

//    var urlBase = 'http://localhost/api';
  var urlBase = 'http://ec2-52-11-54-244.us-west-2.compute.amazonaws.com/api';


    var dataFactory = {};

    dataFactory.GetList = function(tipo) {
      return $http.get(urlBase + '/' + tipo);
    };

    dataFactory.GetId = function(tipo, id) {
      return $http.get(urlBase + '/' + tipo + '/' + id);
    };

    dataFactory.New = function(tipo, data) {
      return $http.post(urlBase + '/' + tipo, data);
    };

    dataFactory.Delete = function(tipo, id) {
      return $http.delete(urlBase + '/' + tipo + '/' + id);
    };

    dataFactory.Save = function(tipo, data) {
      return $http.put(urlBase + '/' + tipo + '/' + data._id, data);
    };

    dataFactory.SendImg = function(files, fields) {

      for (var i = 0; i < files.length; i++) {
        var file = files[i];
        return $upload.upload({
          url: urlBase + '/image',
          fields: fields,
          file: file
        });
      }

    };

    return dataFactory;
  }]);

app
  .factory("_",['$window', function($window) {
      var _ = $window._;
      delete($window._);
      return (_);
    }]
  )
  .directive('fileModel', ['$parse', function($parse) {
    return {
      restrict: 'A',
      link: function(scope, element, attrs) {
        var model = $parse(attrs.fileModel);
        var modelSetter = model.assign;

        element.bind('change', function() {
          scope.$apply(function() {
            modelSetter(scope, element[0].files[0]);
          });
        });
      }
    };
  }])
  ;

app
.config(['$mdThemingProvider', function($mdThemingProvider) {
  $mdThemingProvider.definePalette('amazingPaletteName', {
    '50': 'CECC41',
    '100': '000000',
    '200': '000000',
    '300': '000000',
    '400': '000000',
    '500': '000000',
    '600': '660700', // cpòpre secondario bottoni
    '700': '0B0B0F',
    '800': '0B0B0F',
    '900': '000000', // colore di base
    'A100': '000000',
    'A200': '000000',
    'A400': '0B0B0F',
    'A700': '0B0B0F',
    'contrastDefaultColor': 'light',    // whether, by default, text (contrast)
                                        // on this palette should be dark or light
    'contrastDarkColors': ['50', '100', //hues which contrast should be 'dark' by default
     '200', '300', '400', 'A100'],
    'contrastLightColors': undefined    // could also specify this if default was 'dark'
  });
  $mdThemingProvider.theme('default')
    .primaryPalette('amazingPaletteName');
}]);


/*
'50': 'CECC41',
'100': 'CECC41',
'200': 'CECC41',
'300': 'CECC41',
'400': 'CECC41',
'500': 'CECC41',
'600': '660700', // cpòpre secondario bottoni
'700': '0B0B0F',
'800': '0B0B0F',
'900': '0B0B0F', // colore di base
'A100': '0B0B0F',
'A200': '0B0B0F',
'A400': '0B0B0F',
'A700': '0B0B0F',
*/

//    <tag-botton rif=""></tag-botton>
app
  .directive('tagBotton', function() {


    return {
      restrict: 'AE',
      scope: {
        rif: '@'
      },
      template: '<md-button  style="text-transform: capitalize; " ui-sref="taglist({tagToSearch: rif})" class="md-raised botton-tag">{{rif}}</md-button>'

    };
  });

// router configuration

app.config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('backend', {
      url: '/amministrazione',
      templateUrl: 'base/backend/layout/tpl.html',
      controller: 'backendCtrl'
    });
}])

// controller

.controller('backendCtrl', ['$scope', function($scope) {
}]);

//      <admin-menu></admin-menu>
app
  .directive('adminMenu', function() {

    function link(scope, element, attrs) {

      scope.items = [
{link: 'listaslider', text: 'slider'},

{link: 'listarubrica', text: 'rubrica'},

{link: 'listacontact', text: 'contact'},


{link: 'listacomment', text: 'comment'},

{link: 'listaimage', text: 'image'},

{link: 'listapost', text: 'post'},

{link: 'listasponsor', text: 'sponsor'},

{
        link: 'home',
        text: 'front'
      }];
    }


    return {
      restrict: 'E',

      templateUrl: 'base/directives/adminMenu/tpl.html',
      link: link
    };
  });

// Directive     <dev-menu></dev-menu>
app
  .directive('devMenu', function() {

    function link(scope, element, attrs) {
      scope.devMenuItems = [


        {link: 'backend', text: 'admin'},
{link: 'post', text: 'post'},
{
        link: 'home',
        text: 'home'
      }];
    }

    return {
      restrict: 'E',
      templateUrl: 'base/directives/devMenu/tpl.html',
      link: link
    };
  });

// Directive     <main-menu></main-menu>
app
  .directive('mainMenu', ['$rootScope', '$state', '_', function($rootScope, $state, _) {

    function link(scope, element, attrs) {


      scope.mainMenuItems = [

        {
          link: 'home',
          text: 'home',
          index: 0
        },

        {
          link: 'articoli',
          text: 'articoli',
          index: 1
        },

        {
          link: 'outfit',
          text: 'outfit',
          index: 2
        },

        {
          link: 'travel',
          text: 'travel',
          index: 5
        },

        {
          link: 'shooting',
          text: 'shooting',
          index: 3
        },

        {
          link: 'rubrica',
          text: 'rubrica',
          index: 4
        },

        {
          link: 'galleria',
          text: 'galleria',
          index: 5
        }

      ];

      scope.selectedIndex = _.result(_.find(scope.mainMenuItems, {
        'link': $state.current.name
      }), 'index');

      $rootScope.$on('$stateChangeSuccess',
        function(event, toState, toParams, fromState, fromParams) {

          scope.selectedIndex = _.result(_.find(scope.mainMenuItems, {
            'link': toState.name
          }), 'index');

        });

      scope.onTabSelected = function(link) {
        $state.go(link);

      };
    }

    return {
      restrict: 'E',
      templateUrl: 'base/directives/mainMenu/tpl.html',
      link: link
    };
  }]);


/*
onTabSelected
*/

// Directive     <sidenav rif="{{_id}}"></sidenav>
app
  .directive('sidenav', ['$state', '_', '$rootScope', function($state, _, $rootScope) {

    function link(scope, element, attrs) {

      var desappearInThose=[ 'galleria'];

      scope.show=!_.includes(desappearInThose, $state.current.name);

      $rootScope.$on('$stateChangeSuccess',
        function(event, toState, toParams, fromState, fromParams) {
          scope.show=!_.includes(desappearInThose, toState.name);

        });
    }

    return {

      restrict: 'E',
      templateUrl: 'base/directives/sidenav/tpl.html',
      link: link
    };
  }]);

// Directive     <slider></slider>
app
  .directive('sliderAAA', ['$state', '$rootScope', function($state, $rootScope) {

    function link(scope, element, attrs) {
      scope.loaded = false;
      scope.sliderItems = [
        '3a569a6f6648f34c670cec6c4036aa71.jpg',
        '2560a9cc169677400048f5df2546830e.jpg',
        'cd5f58e4a05b765566d6e9166affc4b3.jpg'
      ];
      scope.loaded = true;
      element.ready(function() {
        $('.topslider').slick({
          infinite: true,
          speed: 300,
          slidesToShow: 1,
          dots: false,
          arrows: false
        });
      });

      $rootScope.$on('$stateChangeSuccess',
        function(event, toState, toParams, fromState, fromParams) {
          scope.loaded = false;
          scope.sliderItems = [
            '2560a9cc169677400048f5df2546830e.jpg',
            'cd5f58e4a05b765566d6e9166affc4b3.jpg',
            '3a569a6f6648f34c670cec6c4036aa71.jpg'
          ];
          scope.loaded = true;

          element.ready(function() {
            $('.topslider').slick({
              infinite: true,
              speed: 300,
              slidesToShow: 1,
              dots: false,
              arrows: false
            });
          });

        });
    }
    return {
      restrict: 'E',
      templateUrl: 'base/directives/slider/tpl.html',
      link: link
    };
  }]);

// Directive     <social-menu></social-menu>
app
  .directive('socialMenu', function() {

    function link(scope, element, attrs) {
      scope.socialMenuItems = [
{link: 'www.facebook.com', icon: 'facebook-alt'},

{link: 'www.pinterest.com', icon: 'pinterest'},

{link: 'www.instagram.com', icon: 'instagrem'},

{link: 'www.twitter.com', icon: 'twitter-square'}

];
    }

    return {
      restrict: 'E',
      templateUrl: 'base/directives/socialMenu/tpl.html',
      link: link
    };
  });

// Directive     <top-menu></top-menu>
app
  .directive('topMenu', function() {

    function link(scope, element, attrs) {
      scope.topMenuItems = [
{link: 'aboutme', text: 'about me'},

{link: 'contact', text: 'contact'},

{link: 'press', text: 'press'}

];
    }

    return {
      restrict: 'E',
      templateUrl: 'base/directives/topMenu/tpl.html',
      link: link
    };
  });

// router configuration

app.config(['$stateProvider', function($stateProvider) {
  $stateProvider
    .state('home', {
      url: '/',
      parent: 'frontend',
      templateUrl: 'base/frontend/home/tpl.html',
      controller: 'homeCtrl'
    });
}])

// controller

.controller('homeCtrl', ['$scope', 'superCache', '_', function($scope, superCache, _) {
  $scope.multiplier = 9;

  var data = superCache.get('home');
  var chankIterator = 0;
  $scope.postList = [];
  $scope.moreAviable = data.length > chankIterator;

  var addchunk = function(chunk) {
    for (var i = 0; i < chunk.length; i++) {
      $scope.postList.push(chunk[i]);
    }
    chankIterator += 1;
    $scope.moreAviable = data.length > chankIterator;
  };


  addchunk(data[chankIterator]);

  $scope.more = function() {
    addchunk(data[chankIterator]);

  };

}]);

// router configuration

app.config(['$stateProvider', function($stateProvider) {

  function toResolve(superCache, httpFactory, _) {

    return httpFactory.GetList('cache')
    .success(function(data) {


      _(data.post).forEach(function(n) {

        if (n.copertina.orientation === 'orizzontale') {
          n.larghezza = 3;
          n.altezza = 2;
          n.larghezzaLPar = 6;
          n.altezzaLPar = 4;
        } else {
          n.larghezza = 2;
          n.altezza = 3;
          n.larghezzaLPar = 6;
          n.altezzaLPar = 9;
        }
      }).value();








      superCache.put('home',_.chunk(data.post , 6));
      superCache.put('articoli',_.chunk(_.filter(data.post, { 'tipo': 'articolo'}) , 2));
      superCache.put('outfit',_.chunk(_.filter(data.post, { 'tipo': 'outfit'}) , 2));
      superCache.put('shooting',_.chunk(_.filter(data.post, { 'tipo': 'shooting'}) , 2));

      superCache.put('tags',data.tags);
      superCache.put('slider',data.slider);
      superCache.put('post',data.post);
      superCache.put('sponsor',data.sponsor);

      return data;

    });
  }
  toResolve.$inject = ['superCache', 'httpFactory', '_'];

  $stateProvider
    .state('frontend', {
      resolve: {simpleObj: toResolve},
      abstract: true,
      templateUrl: 'base/frontend/layout/tpl.html',
      controller: ['simpleObj', function(simpleObj){
      }]
    });
}]);

//      <truncate></truncate>
app
  .directive('truncate', ['_', function(_) {

    function link(scope, element, attrs) {
      scope.truncatedText=_.trunc(scope.rif, {
        'length': 100,
        'separator': ' '
      });
    }


    return {
      restrict: 'E',
      scope: {
        rif: '@'
      },
      template: '<p>{{truncatedText}}</p>',
      link: link
    };
  }]);


/*
_.trunc(scope.rif, {
  'length': 24,
  'separator': ' '
});
*/

// Directive     <comment rif="{{_id}}"></comment>
angular.module('comment')
  .directive('comment', ['httpFactory', function(httpFactory) {

    function link(scope, element, attrs) {

      scope.$watch('rif', function(newValue, oldValue) {


        if (newValue === '') {
          scope.commenti = [];
        } else {
          httpFactory.GetId('comment', newValue)
            .success(function(data) {
              scope.commenti = data;
            });
        }
      });


      scope.Save = function() {
        

        httpFactory.New('comment', scope.commento)
          .success(function(data) {
            scope.commenti.push(data);
          });
      };
    }


    return {
      scope: {
        rif: '@'
      },
      restrict: 'E',
      templateUrl: 'comment/directives/addComment/tpl.html',
      link: link
    };
  }]);

// Directive     <contact></contact>
angular.module('contact')
  .directive('contact', ['httpFactory', function(httpFactory) {

    function link(scope, element, attrs) {



      scope.Save = function() {

        httpFactory.New('contact', scope.contact)
          .success(function(data) {
            console.log('sent');
            scope.contact.nome='';
            scope.contact.mail='';
            scope.contact.testo='';

          });
      };
    }


    return {
      scope: {
        rif: '@'
      },
      restrict: 'E',
      templateUrl: 'contact/directives/contact/tpl.html',
      link: link
    };
  }]);

// Directive     <expand rif="{{imageName}}"></expand>
angular.module('image')
  .directive('expand', ['$mdDialog', function($mdDialog) {

    function link(scope, element, attrs) {

      scope.expand= function(){


        var dialogConfig = {
          templateUrl: 'image/dialogs/expand/tpl.html',
          controller: 'expandImageController',
          locals: {
            image: scope.rif
          }
        };
        $mdDialog.show(dialogConfig)
          .then(function(data) {

        
          });
      };
    }

    return {
      scope: {
        rif: '@'
      },

      restrict: 'E',
      templateUrl: 'image/directives/galleryitem/tpl.html',
      link: link
    };
  }]);

// Directive     <share></share>
app
  .directive('share', function() {

    function link(scope, element, attrs) {
      
    }

    return {
      restrict: 'AE',
      templateUrl: 'post/directives/share/tpl.html',
      link: link
    };
  });

// Directive     <rubrica></rubrica>
angular.module('rubrica')
  .directive('rubrica', ['httpFactory', function(httpFactory) {

    function link(scope, element, attrs) {

      scope.Save = function() {
        httpFactory.New('rubrica', scope.rubrica)
          .success(function(data) {
            console.log('sent');
          });
      };
    }


    return {
      scope: {
        rif: '@'
      },
      restrict: 'E',
      templateUrl: 'rubrica/directives/rubrica/tpl.html',
      link: link
    };
  }]);

// Directive     <page-slider images=""></page-slider>
angular.module('slider')
  .directive('pageSlider', function() {



    return {

      restrict: 'E',
      templateUrl: 'slider/directives/pageslider/tpl.html',
      controller: 'pageSliderController'
    };
  })

.controller('pageSliderController', ['$scope', '$timeout', function($scope, $timeout) {

  $timeout(function() {
    $('.' + $scope.articoli._id).slick({
      infinite: true,
      speed: 300,
      slidesToShow: 1,
      centerMode: true,
      variableWidth: true,
      dots: false,
      arrows: false
    });

    $scope.avanti = function() {
      $('.' + $scope.articoli._id).slick('slickNext');
    };

    $scope.indietro = function() {
      $('.' + $scope.articoli._id).slick('slickPrev');
    };

  });

}]);

// Directive     <slider></slider>
angular.module('slider')
  .directive('slider', ['superCache', '_', '$rootScope', '$state', 'sliderFaktory', '$stateParams', function(superCache, _, $rootScope, $state, sliderFaktory, $stateParams) {
    function link(scope, element, attrs) {


        function setSlideToAdd(stato, param) {

          function getImagesFromState(statoDaCercare) {
            return _.result(_.find(sliderItems, {
              'stato': statoDaCercare
            }), 'immagini');
          }

          function getImagesFromParam(parametro) {
            return _.result(_.find(superCache.get('post'), {
              '_id': parametro
            }), 'header');
          }

          var toAdd = [];
          var imagesFromPresentState;
          if (stato === 'postSingle') {
            var imagesFromParam = getImagesFromParam(param.id);
            if (imagesFromParam && imagesFromParam.length !== 0) {
              toAdd = imagesFromParam;
            } else {
              imagesFromPresentState = getImagesFromState(stato);
              if (imagesFromPresentState && imagesFromPresentState.length !== 0) {
                toAdd = imagesFromPresentState;
              } else {
                toAdd = getImagesFromState('default');
              }
            }
          } else {
            imagesFromPresentState = getImagesFromState(stato);
            if (imagesFromPresentState && imagesFromPresentState.length !== 0) {
              toAdd = imagesFromPresentState;
            } else {
              toAdd = getImagesFromState('default');
            }

          }


          attiveSlide = toAdd.length;
          return toAdd;
        }

        sliderFaktory.inizialize();
        var attiveSlide = 1;
        var sliderItems = superCache.get('slider');
        sliderFaktory.removeSlide(attiveSlide);
        sliderFaktory.addSlide(setSlideToAdd($state.current.name, $stateParams));

        $rootScope.$on('$stateChangeSuccess',
          function(event, toState, toParams, fromState, fromParams) {

            sliderFaktory.removeSlide(attiveSlide);
            sliderFaktory.addSlide(setSlideToAdd(toState.name, toParams));
          });
      }


    return {
      restrict: 'E',
      templateUrl: 'slider/directives/slider/tpl.html',
      link: link
    };
  }]);

angular.module('slider')
  .factory('sliderFaktory', ['_', function(_) {
    var dataFactory = {};

    dataFactory.inizialize = function() {
      return $('.topslider').slick({
        infinite: true,
        speed: 300,
        slidesToShow: 1,
        dots: false,
        arrows: false
      });
    };

    dataFactory.addSlide = function(images) {

      images.forEach(function(entry) {
       $('.topslider').slick('slickAdd', '  <div class="topslide">' +
        '<img src="images/header/' + entry + '">' +
        '</div>');
      });

        return;

    };

    dataFactory.removeSlide = function(num) {
      for (var i = 0; i < num; i++) {$('.topslider').slick('slickRemove', 0);}
      return ;
      };

    return dataFactory;
  }]);

// Directive     <sponsor></sponsor>
app
  .directive('sponsor', ['superCache', function(superCache) {

    function link(scope, element, attrs) {
      scope.sponsorList = superCache.get('sponsor');
    }

    return {
      restrict: 'E',
      templateUrl: 'sponsor/directives/sponsor/tpl.html',
      link: link
    };
  }]);

// Directive     <tags></tags>
app
  .directive('tags', ['superCache', function(superCache) {

    function link(scope, element, attrs) {
      scope.tagsList = superCache.get('tags');
    }

    return {
      restrict: 'E',
      templateUrl: 'tags/directives/tags/tpl.html',
      link: link
    };
  }]);
